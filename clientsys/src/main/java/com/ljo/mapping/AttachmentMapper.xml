<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljo.dao.IAttachmentDao" >
  <resultMap id="BaseResultMap" type="com.ljo.dto.Attachment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="umid" property="umid" jdbcType="INTEGER" />
    <result column="umentity" property="umentity" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="contentsize" property="contentsize" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ljo.dto.Attachment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, umid, umentity, type, name, contentsize
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from um_attachment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from um_attachment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljo.dto.Attachment" >
    insert into um_attachment (id, umid, umentity, 
      type, name, contentsize, 
      content)
    values (#{id,jdbcType=INTEGER}, #{umid,jdbcType=INTEGER}, #{umentity,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{contentsize,jdbcType=DECIMAL}, 
      #{content,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ljo.dto.Attachment" >
    insert into um_attachment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="umid != null" >
        umid,
      </if>
      <if test="umentity != null" >
        umentity,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="contentsize != null" >
        contentsize,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="umid != null" >
        #{umid,jdbcType=INTEGER},
      </if>
      <if test="umentity != null" >
        #{umentity,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="contentsize != null" >
        #{contentsize,jdbcType=DECIMAL},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljo.dto.Attachment" >
    update um_attachment
    <set >
      <if test="umid != null" >
        umid = #{umid,jdbcType=INTEGER},
      </if>
      <if test="umentity != null" >
        umentity = #{umentity,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="contentsize != null" >
        contentsize = #{contentsize,jdbcType=DECIMAL},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ljo.dto.Attachment" >
    update um_attachment
    set umid = #{umid,jdbcType=INTEGER},
      umentity = #{umentity,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      contentsize = #{contentsize,jdbcType=DECIMAL},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljo.dto.Attachment" >
    update um_attachment
    set umid = #{umid,jdbcType=INTEGER},
      umentity = #{umentity,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      contentsize = #{contentsize,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>