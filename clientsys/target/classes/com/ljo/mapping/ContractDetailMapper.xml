<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljo.dao.IContractDetailDao" >
  <resultMap id="BaseResultMap" type="com.ljo.dto.ContractDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contractid" property="contractid" jdbcType="INTEGER" />
    <result column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="range" property="range" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contractid, pmid, num, price, total, type, range
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from um_contractdetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from um_contractdetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljo.dto.ContractDetail" >
    insert into um_contractdetail (id, contractid, pmid, 
      num, price, total, 
      type, range)
    values (#{id,jdbcType=INTEGER}, #{contractid,jdbcType=INTEGER}, #{pmid,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{total,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER}, #{range,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ljo.dto.ContractDetail" >
    insert into um_contractdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractid != null" >
        contractid,
      </if>
      <if test="pmid != null" >
        pmid,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="range != null" >
        range,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractid != null" >
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="pmid != null" >
        #{pmid,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="range != null" >
        #{range,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljo.dto.ContractDetail" >
    update um_contractdetail
    <set >
      <if test="contractid != null" >
        contractid = #{contractid,jdbcType=INTEGER},
      </if>
      <if test="pmid != null" >
        pmid = #{pmid,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="range != null" >
        range = #{range,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljo.dto.ContractDetail" >
    update um_contractdetail
    set contractid = #{contractid,jdbcType=INTEGER},
      pmid = #{pmid,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      total = #{total,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      range = #{range,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>